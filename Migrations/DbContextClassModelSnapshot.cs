// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SpaceWalk.Data;

#nullable disable

namespace SpaceWalk.Migrations
{
    [DbContext(typeof(DbContextClass))]
    partial class DbContextClassModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SpaceWalk.Models.Comment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("Threadsid")
                        .HasColumnType("integer");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("createdTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("lastModifiedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("thread_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Threadsid");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SpaceWalk.Models.MainForum", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("createdTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("lastModifiedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("name_image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("url_image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("MainForums");
                });

            modelBuilder.Entity("SpaceWalk.Models.SubForum", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("createdTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("judul")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("lastModifiedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("main_id")
                        .HasColumnType("integer");

                    b.Property<string>("name_image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("url_image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("main_id");

                    b.ToTable("SubForums");
                });

            modelBuilder.Entity("SpaceWalk.Models.Threads", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("createdTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("lastModifiedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("liked")
                        .HasColumnType("integer");

                    b.Property<string>("name_image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("sub_id")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("url_image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.Property<int>("view")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("sub_id");

                    b.HasIndex("user_id");

                    b.ToTable("Threads");
                });

            modelBuilder.Entity("SpaceWalk.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("birth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("github")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("hobies")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("linkedin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("passwordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("urlImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("whatsapp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SpaceWalk.Models.UserLike", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("Threadsid")
                        .HasColumnType("integer");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("createdTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("lastModifiedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("thread_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Threadsid");

                    b.HasIndex("user_id");

                    b.ToTable("UserLikes");
                });

            modelBuilder.Entity("SpaceWalk.Models.Comment", b =>
                {
                    b.HasOne("SpaceWalk.Models.Threads", "Threads")
                        .WithMany()
                        .HasForeignKey("Threadsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Threads");
                });

            modelBuilder.Entity("SpaceWalk.Models.SubForum", b =>
                {
                    b.HasOne("SpaceWalk.Models.MainForum", "MainForum")
                        .WithMany()
                        .HasForeignKey("main_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainForum");
                });

            modelBuilder.Entity("SpaceWalk.Models.Threads", b =>
                {
                    b.HasOne("SpaceWalk.Models.SubForum", "SubForum")
                        .WithMany()
                        .HasForeignKey("sub_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpaceWalk.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubForum");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SpaceWalk.Models.UserLike", b =>
                {
                    b.HasOne("SpaceWalk.Models.Threads", "Threads")
                        .WithMany()
                        .HasForeignKey("Threadsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpaceWalk.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Threads");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
